/* ./AboutSection.module.css */
/* Use a distinct class name for the section wrapper if using modules,
   or rely on the global .section-wrapper if defined elsewhere */
.sectionWrapper {
	padding: 40px 20px; /* Adjusted padding */
	max-width: 1200px;
	margin: 4rem auto; /* Add some vertical margin */
	opacity: 0; /* Start hidden for GSAP fade-in */
	caret-color: transparent;
	overflow: hidden; /* Prevent content overflow during animations */
}

.title {
	font-size: clamp(1.8rem, 5vw, 2.5em); /* Responsive font size */
	margin-bottom: 30px; /* Increased margin */
	text-align: center;
	letter-spacing: 1.5px; /* Slightly increased spacing */
	color: var(--text-color);
	caret-color: transparent;
	/* Prepare for SplitText - ensure proper line breaking */
	white-space: pre-wrap; /* Allow wrapping but preserve whitespace */
	word-wrap: break-word;
	/* Hide initial state if needed, though GSAP handles it */
	/* opacity: 0; */
	/* transform: translateY(20px); */
}

/* Ensure SplitText characters are display: inline-block for transforms */
.title > div {
	display: inline-block;
}

.aboutMeContainer {
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: 30px; /* Slightly increased gap */
	caret-color: transparent;
	margin-bottom: 3rem; /* Space before Experience */
}

/* Removed .goFAQLink as it wasn't in the final component JSX */

.textWrapper {
	line-height: 1.7; /* Slightly increased line-height */
	text-align: center;
	color: var(--text-color);
	caret-color: transparent;
	max-width: 750px; /* Limit text width for readability */
	width: 100%;
	opacity: 0; /* Start hidden */
}

.paragraph {
	font-size: clamp(1rem, 2.5vw, 1.15em); /* Responsive font size */
	color: var(--text-color);
	margin-bottom: 20px; /* Consistent margin */
	text-align: left; /* Keep left align for readability */
	caret-color: transparent;
	/* Prepare lines for SplitText */
	/* opacity: 0; */ /* Let GSAP handle this */
	/* transform: translateY(10px); */
}

/* Ensure SplitText lines are block-level for transforms */
.paragraph > div {
	display: block; /* Or inline-block if needed, but block is often better for lines */
	overflow: hidden; /* Helps contain transforms if needed */
}


@media (max-width: 767px) {
	.paragraph {
		text-align: center; /* Center on mobile if preferred */
	}
	.sectionWrapper {
		padding: 30px 15px;
	}
}

.photoWrapper {
	display: flex;
	justify-content: center;
	width: 100%;
	margin-bottom: 25px; /* Use margin instead of padding-bottom */
	caret-color: transparent;
	opacity: 0; /* Start hidden */
}

.photo {
	max-width: 280px; /* Slightly increased max-width */
	width: 90%; /* Use percentage for better scaling */
	height: auto;
	aspect-ratio: 1 / 1; /* Ensure square aspect ratio */
	border-radius: 90% 65% 79% 63% / 92% 86% 70% 71%;
	padding: 10px; /* control the border gap */
	mask:
		/* Mask for the content area */
			conic-gradient(#000 0 0) content-box,
				/* Subtracting pattern for the border effect */
			linear-gradient(calc(mod(var(--a, 0deg), 180deg) * var(--i, 0) + 45deg),
			#0000 30%,#000 40% 60%,#0000 70%) subtract,
				/* Mask for the padding area (border background) */
			conic-gradient(#000 0 0) padding-box;
	transition:
			--i 0.5s,             /* Transition for hover intensity */
			--a 0s 0.5s,         /* Delay angle transition */
			filter 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94), /* Smoother filter transition */
			box-shadow 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94), /* Smoother shadow transition */
			transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94); /* Smoother transform transition */
	box-shadow: 0 5px 10px rgba(0, 0, 0, 0.15); /* Slightly softer shadow */
	filter: grayscale(90%) brightness(80%); /* Slightly less harsh filter */
	border: 4px solid #aaa; /* Slightly darker border */
	caret-color: transparent;
	user-select: none;
	object-fit: cover; /* Ensure image covers the area */
	transform-origin: center center; /* Set transform origin */

	animation: ultraGooeyPortal 12s linear infinite alternate; /* Smoother, alternating animation */
}

@keyframes ultraGooeyPortal {
	0% {
		border-radius: 88% 62% 70% 60% / 85% 80% 75% 70%;
		box-shadow: 0 0 12px rgba(180, 100, 180, 0.2),
		0 0 24px rgba(100, 180, 180, 0.25);
		transform: scale(1) rotate(0deg);
	}
	25% {
		border-radius: 75% 90% 65% 85% / 88% 60% 85% 72%;
		transform: scale(1.01) rotate(1deg);
	}
	50% {
		border-radius: 90% 75% 82% 68% / 72% 88% 95% 60%;
		box-shadow: 0 0 18px rgba(200, 120, 200, 0.3),
		0 0 36px rgba(120, 200, 200, 0.35);
		transform: scale(1) rotate(-1deg);
	}
	75% {
		border-radius: 85% 95% 75% 85% / 90% 72% 88% 78%;
		transform: scale(1.01) rotate(0.5deg);
	}
	100% {
		border-radius: 92% 70% 78% 85% / 72% 85% 95% 78%;
		box-shadow: 0 0 15px rgba(180, 100, 180, 0.25),
		0 0 30px rgba(100, 180, 180, 0.3);
		transform: scale(1) rotate(0deg);
	}
}


.photo:hover {
	--i: 1; /* Activate intensity variable */
	--a: 15turn; /* Set target angle for rotation effect */
	transition:
			--i 0.1s, /* Faster activation */
			--a 25s linear, /* Slower, smoother rotation */
			filter 0.5s cubic-bezier(0.165, 0.84, 0.44, 1), /* Ease out quad */
			box-shadow 0.5s cubic-bezier(0.165, 0.84, 0.44, 1),
			transform 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);
	filter: grayscale(0%) brightness(100%);
	box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25); /* Enhanced hover shadow */
	transform: scale(1.03); /* Slight scale up on hover */
	-webkit-tap-highlight-color: transparent;
}

/* CSS Custom Properties for the mask effect */
@property --a {
	syntax: "<angle>";
	inherits: false;
	initial-value: 0deg;
}
@property --i {
	syntax: "<number>";
	inherits: false;
	initial-value: 0;
}
/* Removed .photo.alt as it wasn't used */

/* --- Responsive Adjustments --- */

@media (min-width: 768px) { /* Tablet and up */
	.sectionWrapper {
		padding: 60px 40px;
	}
	.aboutMeContainer {
		flex-direction: row;
		align-items: flex-start; /* Align items to the start */
		gap: 50px;
	}

	.textWrapper {
		text-align: left; /* Keep text left-aligned */
		flex: 1; /* Allow text to take available space */
		max-width: none; /* Remove max-width constraint from row layout */
	}

	.photoWrapper {
		flex: 0 0 300px; /* Fixed width for photo container */
		justify-content: center; /* Center photo within its container */
		margin-bottom: 0; /* Remove bottom margin in row layout */
	}

	.photo {
		max-width: 300px; /* Max size on larger screens */
		width: 100%;
	}
	.paragraph {
		margin-bottom: 25px; /* Slightly more space between paragraphs */
	}
}

@media (min-width: 1024px) { /* Desktop */
	.sectionWrapper {
		padding: 80px 60px; /* More padding */
	}
	.aboutMeContainer {
		gap: 60px;
	}
	.textWrapper {
		/* Maybe add a max-width back if needed on very wide screens */
		max-width: 650px;
	}
	.photoWrapper {
		flex: 0 0 350px; /* Slightly larger photo container */
	}
	.photo {
		max-width: 350px;
	}
}


/* --- Theme Adjustments --- */
body.dark .title,
body.dark .textWrapper,
body.dark .paragraph {
	color: #e0e0e0; /* Slightly off-white for dark mode */
}
body.dark .photo {
	border-color: #555; /* Darker border for dark mode */
}

body.light .title,
body.light .textWrapper,
body.light .paragraph {
	color: #222; /* Slightly softer black for light mode */
}
body.light .photo {
	border-color: #ccc; /* Lighter border for light mode */
}


/* --- Experience Wrapper --- */
.experienceWrapper {
	display: flex;
	justify-content: center;
	align-items: center;
	min-height: 8vh; /* Use min-height */
	margin-top: 4rem;
	margin-bottom: 2rem;
	opacity: 0; /* Start hidden */
	/* transform: translateY(30px); */ /* GSAP handles this */
}

/* Mobile-specific styles for Experience Wrapper margins */
@media (max-width: 767px) {
	.experienceWrapper {
		margin-top: 3rem; /* Adjusted margin */
		margin-bottom: 4rem; /* Adjusted margin */
		/* Consider scaling down the Experience component itself on mobile if needed */
	}
}